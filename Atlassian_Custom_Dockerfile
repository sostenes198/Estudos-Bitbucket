
FROM docker-public.packages.atlassian.com/sox/atlassian/bitbucket-pipelines-runner:1
ENV ACCOUNT_UUID={84833ec5-5679-4baf-8887-f21aadb39c62}
ENV ACCOUNT_UUID={84833ec5-5679-4baf-8887-f21aadb39c62}
ENV RUNNER_UUID={9ebdf0dd-157c-5d6f-a7dc-55313202d1f6}
ENV RUNTIME_PREREQUISITES_ENABLED=true
ENV OAUTH_CLIENT_ID=jDyCLt4GLuQA3sHsFsBEbdmKa7u3W8J7
ENV OAUTH_CLIENT_SECRET=ATOAYM-AFceJNYmiJFH-ClXXffS9kLShUjx4DlbLKtvdeBmP2PEoz17wxs-qd8rpJhDQD5B8E3BE
ENV WORKING_DIRECTORY=/tmp
EXPOSE 80


# ## Install Node
# ENV NODE_VERSION=18.18.0
# RUN apt-get update
# RUN apt install -y curl
# RUN curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.5/install.sh | bash
# ENV NVM_DIR=/root/.nvm
# RUN . "$NVM_DIR/nvm.sh" && nvm install ${NODE_VERSION}
# RUN . "$NVM_DIR/nvm.sh" && nvm use v${NODE_VERSION}
# RUN . "$NVM_DIR/nvm.sh" && nvm alias default v${NODE_VERSION}
# ENV PATH="/root/.nvm/versions/node/v${NODE_VERSION}/bin/:${PATH}"

# # Test
# RUN node --version
# RUN npm --version

# ## Instal and Configure PNPM
# RUN corepack enable && corepack prepare pnpm@latest-8 --activate

# # Test
# RUN pnpm --version

# ## Install Docker - Docker Compose

# # Update repositories and install dependencies
# RUN apt-get update && \
#     apt-get install -y apt-transport-https ca-certificates curl software-properties-common

# # Add Docker's official GPG key
# RUN curl -fsSL https://download.docker.com/linux/ubuntu/gpg | apt-key add -

# # Add Docker's official repository
# RUN add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"

# # Update repositories again and install Docker
# RUN apt-get update && \
#     apt-get install -y docker-ce docker-ce-cli containerd.io

# # Download and install Docker Compose
# RUN curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose && \
#     chmod +x /usr/local/bin/docker-compose

# # # Configure user "docker" to not require "sudo"
# # RUN usermod -aG docker $USER

# # Test
# RUN docker --version
# RUN docker compose --version
